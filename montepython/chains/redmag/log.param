#-----CLASS v3.2.0 (branch: , hash: )-----

#------Experiments to test (separated with commas)-----
data.experiments=['eftdes']
data.over_sampling=[1, 4]

#------ Parameter list -------
# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1 or None (if you want a boundary of -1, use -1.0)
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'

# Cosmological parameters list
data.parameters['omega_b']          = [2.235, 2.052, 2.42, 0, 0.01, 'cosmo']
data.parameters['n_s']          = [0.965, 0.94, 0.99, 0, 1,   'cosmo']
data.parameters['omega_cdm']    = [0.137, 0.05, 0.25, 0.003, 1, 'cosmo']
data.parameters['h']            = [0.9, 0.5, 1.15, 0.03, 1, 'cosmo']
data.parameters['ln10^{10}A_s'] = [3.3, 2., 4., 0.1, 1, 'cosmo']

data.cosmo_arguments['N_ur'] = 2.0328
data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['m_ncdm'] = 0.06

# EFT parameters
data.parameters['b1_1']  = [1.16, 0.1, 4, 0.2, 1,  'nuisance']
data.parameters['b1_2']  = [1.15, 0.1, 4, 0.2, 1,  'nuisance']
data.parameters['b1_3']  = [1.20, 0.1, 4, 0.2, 1,  'nuisance']
data.parameters['b1_4']  = [1.31, 0.1, 4, 0.2, 1,  'nuisance']
data.parameters['b1_5']  = [1.39, 0.1, 4, 0.2, 1,  'nuisance']

data.parameters['c2_1']  = [0.29, -10., 10., 0.5, 1,  'nuisance']
data.parameters['c2_2']  = [0.22, -10., 10., 0.5, 1,  'nuisance']
data.parameters['c2_3']  = [0.22, -10., 10., 0.5, 1,  'nuisance']
data.parameters['c2_4']  = [0.24, -10., 10., 0.5, 1,  'nuisance']
data.parameters['c2_5']  = [0.14, -10., 10., 0.5, 1,  'nuisance']

data.parameters['b1gs_1']  = [1.18, 0.1, 4, 0.2, 1,  'nuisance']
data.parameters['b1gs_2']  = [1.17, 0.1, 4, 0.2, 1,  'nuisance']
data.parameters['b1gs_3']  = [1.23, 0.1, 4, 0.2, 1,  'nuisance']
data.parameters['b1gs_4']  = [1.35, 0.1, 4, 0.2, 1,  'nuisance']
data.parameters['b1gs_5']  = [1.4, 0.1, 4, 0.2, 1,  'nuisance']

data.parameters['c2gs_1']  = [0.2, -10., 10., 0.5, 1,  'nuisance']
data.parameters['c2gs_2']  = [0.15, -10., 10., 0.5, 1,  'nuisance']
data.parameters['c2gs_3']  = [0.15, -10., 10., 0.5, 1,  'nuisance']
data.parameters['c2gs_4']  = [0.15, -10., 10., 0.5, 1,  'nuisance']
data.parameters['c2gs_5']  = [0.08, -10., 10., 0.5, 1,  'nuisance']

data.parameters['bmag_1']  = [-1.78, -10, 10, 0.5, 1,  'nuisance']
data.parameters['bmag_2']  = [-4.9, -10, 10, 0.5, 1,  'nuisance']
data.parameters['bmag_3']  = [-3., -10, 10, 0.5, 1,  'nuisance']
data.parameters['bmag_4']  = [0.34, -10, 10, 0.5, 1,  'nuisance']
data.parameters['bmag_5']  = [-0.6, -10, 10, 0.5, 1,  'nuisance']

data.parameters['dzs_1']  = [0., -10, 10, 0.1, 1,  'nuisance']
data.parameters['dzs_2']  = [0., -10, 10, 0.1, 1,  'nuisance']
data.parameters['dzs_3']  = [0., -10, 10, 0.1, 1,  'nuisance']
data.parameters['dzs_4']  = [0., -10, 10, 0.1, 1,  'nuisance']

data.parameters['dzl_1']  = [0., -10, 10, 0.1, 1,  'nuisance']
data.parameters['dzl_2']  = [0., -10, 10, 0.1, 1,  'nuisance']
data.parameters['dzl_3']  = [0., -10, 10, 0.1, 1,  'nuisance']
data.parameters['dzl_4']  = [0., -10, 10, 0.1, 1,  'nuisance']
data.parameters['dzl_5']  = [0., -10, 10, 0.1, 1,  'nuisance']

data.parameters['szl_1']  = [1., 0, 10, 0., 1,  'nuisance']
data.parameters['szl_2']  = [1., 0, 10, 0., 1,  'nuisance']
data.parameters['szl_3']  = [1., 0, 10, 0., 1,  'nuisance']
data.parameters['szl_4']  = [1., 0, 10, 0., 1,  'nuisance']
data.parameters['szl_5']  = [1.2, 0, 10, 0.1, 1,  'nuisance']

data.parameters['A']  = [0.78, -10, 10, 0.2, 1,  'nuisance']
data.parameters['alpha']  = [2.76, -10, 10, 0.2, 1,  'nuisance']

data.parameters['m_1']  = [0, -4, 4, 0.01, 1,  'nuisance']
data.parameters['m_2']  = [-0.2, -4, 4, 0.01, 1,  'nuisance']
data.parameters['m_3']  = [-0.02, -4, 4, 0.01, 1,  'nuisance']
data.parameters['m_4']  = [-0.04, -4, 4, 0.01, 1,  'nuisance']

data.parameters['Omega_m']          = [0, None, None, 0,     1,   'derived']
data.parameters['sigma8']          = [0, None, None, 0,     1,   'derived']
data.parameters['A_s']          = [0, None, None, 0,     1,   'derived']

#-----Likelihood-eftdes-----
eftdes.data_directory = data.path['data']
eftdes.use_nuisance = ['b1_1', 'b1_2', 'b1_3', 'b1_4', 'b1_5', 'c2_1', 'c2_2', 'c2_3', 'c2_4', 'c2_5', 'b1gs_1', 'b1gs_2', 'b1gs_3', 'b1gs_4', 'b1gs_5', 'c2gs_1', 'c2gs_2', 'c2gs_3', 'c2gs_4', 'c2gs_5', 'bmag_1', 'bmag_2', 'bmag_3', 'bmag_4', 'bmag_5', 'dzs_1', 'dzs_2', 'dzs_3', 'dzs_4', 'dzl_1', 'dzl_2', 'dzl_3', 'dzl_4', 'dzl_5', 'szl_1', 'szl_2', 'szl_3', 'szl_4', 'szl_5', 'A', 'alpha', 'm_1', 'm_2', 'm_3', 'm_4']
eftdes.config_file = data.path['data'] + '/eftdes/config/redmag.yaml'

#------ Mcmc parameters ----
data.N = 10
data.write_step = 10

#-----------Cosmological-arguments---------
#data.cosmo_arguments.update({'P_k_max_1/Mpc': 2.0, 'z_max_pk': 4.0, 'output': ' mPk '})

#--------Default-Configuration------
data.path['root']        = './'
data.path['MontePython'] = './montepython'
data.path['data']        = './data'
data.path['cosmo']       = '../class_public-3.2.0'
